{"version":3,"sources":["PokemonContainer.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonContainer","id","name","type","image","console","log","className","src","App","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","result","forEach","pokemon","fetch","res","json","data","currentList","next","results","useEffect","map","types","sprites","other","dream_world","front_default","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGe,SAASA,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAEtD,OADAC,QAAQC,IAAIJ,GAER,sBAAKK,UAAU,uCAAf,UACI,8BACI,6BAAKN,MAET,qBAAKO,IAAKJ,IACV,sBAAKG,UAAU,UAAf,UACI,6BAAKL,IACL,6BAAKC,UCPN,SAASM,IACtB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,qCAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,uCAAG,qBAMZC,EANY,SAAAC,EAAA,6DAMZD,EANY,SAMQE,GAC3BA,EAAOC,QAAP,uCAAe,WAAOC,GAAP,iBAAAH,EAAA,sEACKI,MAAM,qCAAD,OAAsCD,EAAQlB,OADxD,cACPoB,EADO,gBAEMA,EAAIC,OAFV,OAEPC,EAFO,OAIbZ,GAAe,SAACa,GAAD,4BAAqBA,GAArB,CAAkCD,OAJpC,2CAAf,wDAPmB,SACHH,MAAMR,GADH,cACfS,EADe,gBAEFA,EAAIC,OAFF,OAEfC,EAFe,OAIrBV,EAAYU,EAAKE,MAWjBV,EAAoBQ,EAAKG,SAfJ,2CAAH,qDAoBpB,OAHAC,qBAAU,WACRb,MACC,IAED,sBAAKR,UAAU,MAAf,UACE,6CACA,qBAAKA,UAAU,0CAAf,SACCI,EAAYkB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CACEnB,GAAImB,EAAQnB,GACZC,KAAMkB,EAAQlB,KACdC,KAAMiB,EAAQU,MAAM,GAAG3B,KAAKD,KAC5BE,MAAOgB,EAAQW,QAAQC,MAAMC,YAAYC,qBAKzC,wBAAQ3B,UAAU,qBAAqB4B,QAASpB,EAAhD,0BC5CV,IAYeqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4dba62cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./PokemonContainer.css\"\r\n\r\nexport default function PokemonContainer({id, name, type, image}) {\r\n    console.log(name);\r\n    return (\r\n        <div className=\"pokemon-container align-items-center\">\r\n            <div>\r\n                <h5>{id}</h5>\r\n            </div>\r\n            <img src={image}></img>\r\n            <div className=\"details\">\r\n                <h3>{name}</h3>\r\n                <h5>{type}</h5>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\n\nimport { useEffect } from \"react\";\nimport PokemonContainer from \"./PokemonContainer\";\n\nexport default function App() {\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [loadMore, setLoadMore] = useState(\"https://pokeapi.co/api/v2/pokemon\");\n\n  const getAllPokemons = async () => {\n    const res = await fetch(loadMore);\n    const data = await res.json();\n\n    setLoadMore(data.next);\n\n    function createPokemonObject(result) {\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\n        const data = await res.json();\n\n        setAllPokemons((currentList) => [...currentList, data]);\n      });\n    }\n\n    createPokemonObject(data.results);\n  };\n  useEffect(() => {\n    getAllPokemons();\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>The Pokedex</h1>\n      <div className=\"d-flex flex-wrap justify-content-center\">\n      {allPokemons.map((pokemon) => (\n        <PokemonContainer\n          id={pokemon.id}\n          name={pokemon.name}\n          type={pokemon.types[0].type.name}\n          image={pokemon.sprites.other.dream_world.front_default}\n        />\n      ))}\n      </div>\n     \n          <button className=\"btn-primary btn-lg\" onClick={getAllPokemons}>Load More</button>\n\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}